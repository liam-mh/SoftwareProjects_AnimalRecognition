<!DOCTYPE html>
<html lan="en" and dir="Itr">

<head>
    <meta charset="utf-8">
    <title>Admin</title>
    <link rel="stylesheet" href="index.css">
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
</head>

<body style="min-height: 1700px;">

  <!-- Nav Bar -->
  <header>
    <nav class="navbar">
       <div class="navbar__container">
          <a href="/" id="navbar__logo"><img src="frontEndImages/elanco.png" alt="Logo" /></a>
          <div class="navbar__toggle" id="mobile-menu">
             <span class="bar"></span> <span class="bar"></span>
             <span class="bar"></span>
          </div>
          <ul class="navbar__menu">
            <li class="navbar__item">
              <a href="/admin-logs" class="navbar__links">Audit Trail</a>
            </li>
            <li class="navbar__item">
              <a href="/" class="navbar__links">Logout</a>
            </li>
          </ul>
       </div>
    </nav>
  </header>

  <div class="main">
    <div class="main__container">

      <div class="main__content2">
        <h1>Welcome to Admin</h1>
        <div style="display:inline-block;">
          <button class="main__btn" onclick="filterByIsAnimalInImage()">Filter by Contains Animal</button>
          <button class="main__btn2" onclick="showContent()">View Most Common Animal</button>
        </div>
      </div>

        <div class="admin_results_box">

          <!-- Datastore data table -->
          <div id="content1">
            <table>
              <tr>
                <th></th>
                <th>Image</th>
                <th>Search Date</th> 
                <th>Image Contains Animal</th>
                <th>AI Labels, with confidence</th>
              </tr>
              <% for (let i = 0; i < data.length; i++) { %>
                <tr class="data-row">
                  <td><%= i+1 %></td>
                  <td><button onclick="showImage(<%= JSON.stringify(data[i].url) %>)">View <%= data[i].path %></button></td>
                  <td><%= formatDate(data[i].date) %></td> 
                  <td style="color: <%= data[i].containsAnimal[0] ? 'green' : 'red' %>">
                    <%= data[i].containsAnimal[0] %>
                    <%= data[i].containsAnimal[1] != null ? ', ' + data[i].containsAnimal[1] : '' %>
                  </td>                  
                  <td><button onclick="showLabels(this, <%= JSON.stringify(data[i].labels) %>)">Show Labels</button></td> 
                </tr>
              <% } %>
            </table>
          </div>

          <!-- Most common animal bar chart --> 
          <div id="content2" style="display:none; max-height: 100%; max-width: 100%;">
            <canvas id="mostCommonChart"></canvas>
          </div>

        </div>
      </div>
    </div>    
  </div>  

  <div class="ocean">
      <div class="wave"></div>
      <div class="wave"></div>
  </div>

</body>

<!-- CSS and JS -->

<!-- Chart.js - Unsure how to move to admin index yet -->
<script>
  const labels = JSON.parse('<%- JSON.stringify(label) %>');
  const data = JSON.parse('<%- JSON.stringify(frequency) %>');    
  const canvas = document.getElementById('mostCommonChart');
  const ctx = canvas.getContext('2d');
  const backgroundColour = [];
  data.forEach((element) => {
      const gradient = ctx.createLinearGradient(0, 0, 0, 400);
      gradient.addColorStop(0, `rgba(100, 223, 223)`);
      gradient.addColorStop(1, `rgba(94, 96, 206)`);
      backgroundColour.push(gradient);
  });
  try {
      // Chart creation code
      const chart = new Chart(ctx, {
          type: 'bar',
          data: {
              labels: labels,
              datasets: [{
                  label: 'label detections',
                  data: data,
                  borderWidth: 1,
                  backgroundColor: backgroundColour
              }]
          },
          options: {
              scales: {
                  y: {
                      beginAtZero: true
                  }
              }
          }
      });
  } catch (error) {
      // Log any errors that occur
      console.error('Error creating chart:', error);
  }
</script>

<style>
  .popup {
  position: fixed;
  top: 30%;
  left: 80%;
  transform: translate(-50%, -50%);
  max-width: 250px;
  max-height: 250px;
  background-color: white;
  border: 1px solid black;
  z-index: 999;
  display: none;
}
.popup img {
  max-width: 250px;
  max-height: 250px;
}   
</style> 

<script>
  function showContent() {
    var content1 = document.getElementById("content1");
    var content2 = document.getElementById("content2");
    var button = document.querySelector('.main__btn2');
    
    if (content1.style.display === "none") {
      content1.style.display = "block";
      content2.style.display = "none";
      button.innerHTML = "View Most Common Animal";
    } else {
      content1.style.display = "none";
      content2.style.display = "block";
      button.innerHTML = "View All Data";
    }
  };  
</script>

<script>
let showAnimal = true;

function filterByIsAnimalInImage() {
  showAnimal = !showAnimal;
  const dataRows = document.querySelectorAll('.data-row');
  dataRows.forEach(row => {
    console.log(row.querySelector('td:nth-child(4)'));
    const containsAnimal = row.querySelector('td:nth-child(4)').style.color === 'red';
    if (containsAnimal === showAnimal) {
      row.style.display = '';
    } else {
      row.style.display = 'none';
    }
  });
}

</script>


<script>
  function showLabels(button, labels) {
    // Get the current row
    const row = button.parentNode.parentNode;
    
    // Check if the labels row already exists
    const existingNextRow = row.nextElementSibling;
    if (existingNextRow && existingNextRow.classList && existingNextRow.classList.contains('labels-row')) {
      // Toggle the display of the labels row
      existingNextRow.remove();
      return;
    } else {
      // Create a new row for the labels
      const labelsRow = document.createElement('tr');
      labelsRow.classList.add('labels-row');
      labelsRow.innerHTML = `
        <td colspan="5">
          <table>
            <tr>
              ${labels.map(l => `<td>${l.description}</td>`).join('')}
            </tr>
            <tr>
              ${labels.map(l => `<td>${(l.score * 100).toFixed(2)}%</td>`).join('')}
            </tr>
          </table>
        </td>
      `;
      
      // Insert the labels row after the current row
      row.after(labelsRow);
    }
  };
</script>

<script>

function showImage(urls) {
  const existingRow = event.target.closest('.data-row');
  const existingNextRow = existingRow.nextSibling;
  if (existingNextRow && existingNextRow.classList && existingNextRow.classList.contains('image-row')) {
    // Images are already displayed, hide them and remove the row
    existingNextRow.remove();
    return;
  }
  const newRow = document.createElement('tr');
  newRow.classList.add('image-row');
  const newCell1 = document.createElement('td');
  const newCell2 = document.createElement('td');
  newCell1.colSpan = '3';
  newCell2.colSpan = '3';
  newCell1.style.textAlign = 'center';
  newCell2.style.textAlign = 'center';
  const image1 = new Image();
  const image2 = new Image();
  image1.src = urls[0];
  image2.src = urls[1];
  image1.style.maxWidth = '300px';
  image1.style.maxHeight = '300px';
  image1.style.display = 'inline-block';
  image1.style.textAlign = 'left';
  image2.style.maxWidth = '300px';
  image2.style.maxHeight = '300px';
  image2.style.display = 'inline-block';
  image2.style.textAlign = 'left';
  newCell1.appendChild(image1);
  newCell2.appendChild(image2);
  newRow.appendChild(newCell1);
  newRow.appendChild(newCell2);
  existingRow.parentNode.insertBefore(newRow, existingRow.nextSibling);
}

</script>

</html>
